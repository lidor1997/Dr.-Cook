{"ast":null,"code":"import{useEffect,useState}from\"react\";import{getRecipes}from\"../../api\";import{RecipeCard}from\"./RecipeCard\";import{Search}from\"./Search\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const RecipesView=()=>{const[recipes,setRecipes]=useState([]);const[searchValue,setSearchValue]=useState(\"\");const[selectedCategory,setSelectedCategory]=useState(\"\");useEffect(()=>{const getRecipesData=async()=>{try{const recipesResponse=await getRecipes();setRecipes(recipesResponse);}catch(error){console.error(error);}};getRecipesData();},[]);const categories=(()=>{const categoriesArray=[];recipes.forEach(recipe=>{if(categoriesArray.indexOf(recipe.category)===-1){categoriesArray.push(recipe.category);}});return categoriesArray;})();// Filter recipes based on search value and selected category\nconst filteredRecipes=recipes.filter(recipe=>{if(selectedCategory&&recipe.category!==selectedCategory){return false;}if(searchValue&&!recipe.name.toLowerCase().includes(searchValue.toLowerCase())){return false;}return true;});return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-[1000px] m-auto sm:px-6 h-100 pb-10\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"h-25 w-full pt-8\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"sm:w-f text-center text-3xl font-pacifico light:text-[#202124] dark:text-white pt-5\",children:\"Our Recommended Recipes\"})}),/*#__PURE__*/_jsx(Search,{categories:categories,searchValue:searchValue,setSearchValue:setSearchValue,selectedCategory:selectedCategory,setSelectedCategory:setSelectedCategory}),filteredRecipes.map(recipe=>/*#__PURE__*/_jsx(RecipeCard,{recipe:recipe}))]});};","map":{"version":3,"names":["useEffect","useState","getRecipes","RecipeCard","Search","jsx","_jsx","jsxs","_jsxs","RecipesView","recipes","setRecipes","searchValue","setSearchValue","selectedCategory","setSelectedCategory","getRecipesData","recipesResponse","error","console","categories","categoriesArray","forEach","recipe","indexOf","category","push","filteredRecipes","filter","name","toLowerCase","includes","className","children","map"],"sources":["C:/Semester 8/webproject/Dr.Cook-Web-Project-main/recipes-client/src/features/recipes/views/RecipesView/RecipesView.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getRecipes } from \"../../api\";\nimport { RecipeType } from \"../../models\";\nimport { RecipeCard } from \"./RecipeCard\";\nimport { Search } from \"./Search\";\n\nexport const RecipesView = () => {\n  const [recipes, setRecipes] = useState<RecipeType[]>([]);\n  const [searchValue, setSearchValue] = useState<string>(\"\");\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"\");\n\n  useEffect(() => {\n    const getRecipesData = async () => {\n      try {\n        const recipesResponse = await getRecipes();\n        setRecipes(recipesResponse);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getRecipesData();\n  }, []);\n\n  const categories = (() => {\n    const categoriesArray: string[] = [];\n    recipes.forEach((recipe) => {\n      if (categoriesArray.indexOf(recipe.category) === -1) {\n        categoriesArray.push(recipe.category);\n      }\n    });\n    return categoriesArray;\n  })();\n\n  // Filter recipes based on search value and selected category\n  const filteredRecipes = recipes.filter((recipe) => {\n    if (selectedCategory && recipe.category !== selectedCategory) {\n      return false;\n    }\n\n    if (\n      searchValue &&\n      !recipe.name.toLowerCase().includes(searchValue.toLowerCase())\n    ) {\n      return false;\n    }\n\n    return true;\n  });\n\n  return (\n    <div className=\"max-w-[1000px] m-auto sm:px-6 h-100 pb-10\">\n      <div className=\"h-25 w-full pt-8\">\n        {/* <!-- use the imported font for h1--> */}\n        <h1 className=\"sm:w-f text-center text-3xl font-pacifico light:text-[#202124] dark:text-white pt-5\">\n          Our Recommended Recipes\n        </h1>\n      </div>\n\n      <Search\n        categories={categories}\n        searchValue={searchValue}\n        setSearchValue={setSearchValue}\n        selectedCategory={selectedCategory}\n        setSelectedCategory={setSelectedCategory}\n      />\n\n      {filteredRecipes.map((recipe) => (\n        <RecipeCard recipe={recipe} />\n      ))}\n    </div>\n  );\n};\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,UAAU,KAAQ,WAAW,CAEtC,OAASC,UAAU,KAAQ,cAAc,CACzC,OAASC,MAAM,KAAQ,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,MAAO,MAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAe,EAAE,CAAC,CACxD,KAAM,CAACW,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAS,EAAE,CAAC,CAC1D,KAAM,CAACa,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGd,QAAQ,CAAS,EAAE,CAAC,CAEpED,SAAS,CAAC,IAAM,CACd,KAAM,CAAAgB,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACF,KAAM,CAAAC,eAAe,CAAG,KAAM,CAAAf,UAAU,CAAC,CAAC,CAC1CS,UAAU,CAACM,eAAe,CAAC,CAC7B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CACtB,CACF,CAAC,CACDF,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAI,UAAU,CAAG,CAAC,IAAM,CACxB,KAAM,CAAAC,eAAyB,CAAG,EAAE,CACpCX,OAAO,CAACY,OAAO,CAAEC,MAAM,EAAK,CAC1B,GAAIF,eAAe,CAACG,OAAO,CAACD,MAAM,CAACE,QAAQ,CAAC,GAAK,CAAC,CAAC,CAAE,CACnDJ,eAAe,CAACK,IAAI,CAACH,MAAM,CAACE,QAAQ,CAAC,CACvC,CACF,CAAC,CAAC,CACF,MAAO,CAAAJ,eAAe,CACxB,CAAC,EAAE,CAAC,CAEJ;AACA,KAAM,CAAAM,eAAe,CAAGjB,OAAO,CAACkB,MAAM,CAAEL,MAAM,EAAK,CACjD,GAAIT,gBAAgB,EAAIS,MAAM,CAACE,QAAQ,GAAKX,gBAAgB,CAAE,CAC5D,MAAO,MAAK,CACd,CAEA,GACEF,WAAW,EACX,CAACW,MAAM,CAACM,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACnB,WAAW,CAACkB,WAAW,CAAC,CAAC,CAAC,CAC9D,CACA,MAAO,MAAK,CACd,CAEA,MAAO,KAAI,CACb,CAAC,CAAC,CAEF,mBACEtB,KAAA,QAAKwB,SAAS,CAAC,2CAA2C,CAAAC,QAAA,eACxD3B,IAAA,QAAK0B,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAE/B3B,IAAA,OAAI0B,SAAS,CAAC,qFAAqF,CAAAC,QAAA,CAAC,yBAEpG,CAAI,CAAC,CACF,CAAC,cAEN3B,IAAA,CAACF,MAAM,EACLgB,UAAU,CAAEA,UAAW,CACvBR,WAAW,CAAEA,WAAY,CACzBC,cAAc,CAAEA,cAAe,CAC/BC,gBAAgB,CAAEA,gBAAiB,CACnCC,mBAAmB,CAAEA,mBAAoB,CAC1C,CAAC,CAEDY,eAAe,CAACO,GAAG,CAAEX,MAAM,eAC1BjB,IAAA,CAACH,UAAU,EAACoB,MAAM,CAAEA,MAAO,CAAE,CAC9B,CAAC,EACC,CAAC,CAEV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}